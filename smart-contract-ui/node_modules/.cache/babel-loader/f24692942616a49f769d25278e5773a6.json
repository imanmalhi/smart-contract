{"ast":null,"code":"export function toHex(n) {\n  return \"0x\" + n.toString(16);\n}\nexport function fromHex(hexString) {\n  return Number.parseInt(hexString, 16);\n}\nexport function formatBlock(block) {\n  if (typeof block === \"string\") {\n    return block;\n  } else if (typeof block === \"number\" && Number.isInteger(block)) {\n    return toHex(block);\n  }\n  return block.toString();\n}","map":{"version":3,"sources":["../../../src/util/hex.ts"],"names":[],"mappings":"AAAA,OAAM,SAAU,KAAK,CAAC,CAAS,EAAA;EAC7B,OAAO,IAAA,GAAK,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAG;AAC9B;AAEA,OAAM,SAAU,OAAO,CAAC,SAAiB,EAAA;EACvC,OAAO,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,CAAC;AACvC;AAEA,OAAM,SAAU,WAAW,CAAC,KAAsB,EAAA;EAChD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAO,KAAK;GACb,MAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE;IAC/D,OAAO,KAAK,CAAC,KAAK,CAAC;EACpB;EACD,OAAO,KAAK,CAAC,QAAQ,EAAE;AACzB","sourcesContent":["export function toHex(n: number): string {\n  return `0x${n.toString(16)}`;\n}\n\nexport function fromHex(hexString: string): number {\n  return Number.parseInt(hexString, 16);\n}\n\nexport function formatBlock(block: string | number): string {\n  if (typeof block === \"string\") {\n    return block;\n  } else if (typeof block === \"number\" && Number.isInteger(block)) {\n    return toHex(block);\n  }\n  return block.toString();\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}