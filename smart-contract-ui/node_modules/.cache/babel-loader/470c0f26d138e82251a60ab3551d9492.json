{"ast":null,"code":"import Method from \"web3-core-method\";\nvar MethodFn = Method;\n/**\n * Private method to enable adding custom RPC calls to the web3 object. This\n * allows the addition of custom endpoints to the web3 object.\n */\nexport function patchEnableCustomRPC(web3) {\n  web3.eth.customRPC = function (opts) {\n    var newMethod = new MethodFn({\n      name: opts.name,\n      call: opts.call,\n      params: opts.params || 0,\n      inputFormatter: opts.inputFormatter || null,\n      outputFormatter: opts.outputFormatter || null\n    });\n    newMethod.attachToObject(this);\n    newMethod.setRequestManager(this._requestManager, this.accounts);\n  };\n}","map":{"version":3,"sources":["../../../src/web3-adapter/customRPC.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,MAAM,kBAAkB;AAUrC,IAAM,QAAQ,GAAQ,MAAM;AAE5B;;;AAGG;AACH,OAAM,SAAU,oBAAoB,CAAC,IAAS,EAAA;EAC5C,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,UAAU,IAAiB,EAAA;IAC9C,IAAM,SAAS,GAAG,IAAI,QAAQ,CAAC;MAC7B,IAAI,EAAE,IAAI,CAAC,IAAI;MACf,IAAI,EAAE,IAAI,CAAC,IAAI;MACf,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,CAAC;MACxB,cAAc,EAAE,IAAI,CAAC,cAAc,IAAI,IAAI;MAC3C,eAAe,EAAE,IAAI,CAAC,eAAe,IAAI;KAC1C,CAAC;IACF,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC;IAC9B,SAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC;EAClE,CAAC;AACH","sourcesContent":["import Method from \"web3-core-method\";\n\ninterface PatchParams {\n  name: string;\n  call: string;\n  params: [any];\n  inputFormatter: any;\n  outputFormatter: any;\n}\n\nconst MethodFn: any = Method;\n\n/**\n * Private method to enable adding custom RPC calls to the web3 object. This\n * allows the addition of custom endpoints to the web3 object.\n */\nexport function patchEnableCustomRPC(web3: any): void {\n  web3.eth.customRPC = function (opts: PatchParams) {\n    const newMethod = new MethodFn({\n      name: opts.name,\n      call: opts.call,\n      params: opts.params || 0,\n      inputFormatter: opts.inputFormatter || null,\n      outputFormatter: opts.outputFormatter || null,\n    });\n    newMethod.attachToObject(this);\n    newMethod.setRequestManager(this._requestManager, this.accounts);\n  };\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}